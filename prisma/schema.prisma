generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id         String      @id @default(uuid())
  email      String      @unique
  password   String
  role       Role        @default(USER)
  profile    Profile?
  activation Activation?
  payments   Payment[]
  bookmarks  Bookmark[]
  groups     Group[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model Profile {
  id        String   @id @default(uuid())
  firstName String?
  lastName  String?
  bio       String?
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Activation {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String   @unique
  isActive  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Payment {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  createdAt DateTime @default(now())
}

model Bookmark {
  id          String   @id @default(uuid())
  description String?
  url         String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  group       Group    @relation(fields: [groupId], references: [id], onDelete: Cascade)
  groupId     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Group {
  id        String     @id @default(uuid())
  name      String
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  bookmarks Bookmark[]
  public    Boolean    @default(false)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}
